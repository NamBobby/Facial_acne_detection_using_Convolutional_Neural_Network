{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _ImagePicker = require(\"./ImagePicker.types\");\nvar _MediaTypeInput;\nvar MediaTypeInput = (_MediaTypeInput = {}, (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.Images, 'image/*'), (0, _defineProperty2.default)(_MediaTypeInput, _ImagePicker.MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nvar _default = {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n  launchImageLibraryAsync: function () {\n    var _launchImageLibraryAsync = (0, _asyncToGenerator2.default)(function* (_ref) {\n      var _ref$mediaTypes = _ref.mediaTypes,\n        mediaTypes = _ref$mediaTypes === void 0 ? _ImagePicker.MediaTypeOptions.Images : _ref$mediaTypes,\n        _ref$allowsMultipleSe = _ref.allowsMultipleSelection,\n        allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe,\n        _ref$base = _ref.base64,\n        base64 = _ref$base === void 0 ? false : _ref$base;\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        base64: base64\n      });\n    });\n    function launchImageLibraryAsync(_x) {\n      return _launchImageLibraryAsync.apply(this, arguments);\n    }\n    return launchImageLibraryAsync;\n  }(),\n  launchCameraAsync: function () {\n    var _launchCameraAsync = (0, _asyncToGenerator2.default)(function* (_ref2) {\n      var _ref2$mediaTypes = _ref2.mediaTypes,\n        mediaTypes = _ref2$mediaTypes === void 0 ? _ImagePicker.MediaTypeOptions.Images : _ref2$mediaTypes,\n        _ref2$allowsMultipleS = _ref2.allowsMultipleSelection,\n        allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS,\n        _ref2$base = _ref2.base64,\n        base64 = _ref2$base === void 0 ? false : _ref2$base;\n      if (!_expoModulesCore.Platform.isDOMAvailable) {\n        return {\n          canceled: true,\n          assets: null\n        };\n      }\n      return yield openFileBrowserAsync({\n        mediaTypes: mediaTypes,\n        allowsMultipleSelection: allowsMultipleSelection,\n        capture: true,\n        base64: base64\n      });\n    });\n    function launchCameraAsync(_x2) {\n      return _launchCameraAsync.apply(this, arguments);\n    }\n    return launchCameraAsync;\n  }(),\n  getCameraPermissionsAsync: function () {\n    var _getCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return permissionGrantedResponse();\n    });\n    function getCameraPermissionsAsync() {\n      return _getCameraPermissionsAsync.apply(this, arguments);\n    }\n    return getCameraPermissionsAsync;\n  }(),\n  requestCameraPermissionsAsync: function () {\n    var _requestCameraPermissionsAsync = (0, _asyncToGenerator2.default)(function* () {\n      return permissionGrantedResponse();\n    });\n    function requestCameraPermissionsAsync() {\n      return _requestCameraPermissionsAsync.apply(this, arguments);\n    }\n    return requestCameraPermissionsAsync;\n  }(),\n  getMediaLibraryPermissionsAsync: function () {\n    var _getMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n    function getMediaLibraryPermissionsAsync(_x3) {\n      return _getMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n    return getMediaLibraryPermissionsAsync;\n  }(),\n  requestMediaLibraryPermissionsAsync: function () {\n    var _requestMediaLibraryPermissionsAsync = (0, _asyncToGenerator2.default)(function* (_writeOnly) {\n      return permissionGrantedResponse();\n    });\n    function requestMediaLibraryPermissionsAsync(_x4) {\n      return _requestMediaLibraryPermissionsAsync.apply(this, arguments);\n    }\n    return requestMediaLibraryPermissionsAsync;\n  }()\n};\nexports.default = _default;\nfunction permissionGrantedResponse() {\n  return {\n    status: _expoModulesCore.PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n    _ref3$capture = _ref3.capture,\n    capture = _ref3$capture === void 0 ? false : _ref3$capture,\n    _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n    allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS,\n    base64 = _ref3.base64;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(function (resolve) {\n    input.addEventListener('change', (0, _asyncToGenerator2.default)(function* () {\n      if (input.files) {\n        var files = allowsMultipleSelection ? input.files : [input.files[0]];\n        var assets = yield Promise.all(Array.from(files).map(function (file) {\n          return readFile(file, {\n            base64: base64\n          });\n        }));\n        resolve({\n          canceled: false,\n          assets: assets\n        });\n      } else {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      }\n      document.body.removeChild(input);\n    }));\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\nfunction readFile(targetFile, options) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n    reader.onerror = function () {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = function (_ref5) {\n      var target = _ref5.target;\n      var uri = target.result;\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0\n        });\n      };\n      if (typeof uri === 'string') {\n        var image = new Image();\n        image.src = uri;\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n          resolve(Object.assign({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) != null ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) != null ? _image$naturalHeight : image.height\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"names":["_expoModulesCore","require","_ImagePicker","_MediaTypeInput","MediaTypeInput","_defineProperty2","default","MediaTypeOptions","All","Images","Videos","_default","name","launchImageLibraryAsync","_launchImageLibraryAsync","_asyncToGenerator2","_ref","_ref$mediaTypes","mediaTypes","_ref$allowsMultipleSe","allowsMultipleSelection","_ref$base","base64","Platform","isDOMAvailable","canceled","assets","openFileBrowserAsync","_x","apply","arguments","launchCameraAsync","_launchCameraAsync","_ref2","_ref2$mediaTypes","_ref2$allowsMultipleS","_ref2$base","capture","_x2","getCameraPermissionsAsync","_getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","_requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_getMediaLibraryPermissionsAsync","_writeOnly","_x3","requestMediaLibraryPermissionsAsync","_requestMediaLibraryPermissionsAsync","_x4","exports","status","PermissionStatus","GRANTED","expires","granted","canAskAgain","_ref3","_ref3$capture","_ref3$allowsMultipleS","mediaTypeFormat","input","document","createElement","style","display","setAttribute","String","Math","random","body","appendChild","Promise","resolve","addEventListener","files","all","Array","from","map","file","readFile","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reject","reader","FileReader","onerror","Error","onload","_ref5","target","uri","result","returnRaw","width","height","image","Image","src","_image$naturalWidth","_image$naturalHeight","Object","assign","naturalWidth","naturalHeight","substr","indexOf","readAsDataURL"],"sources":["C:\\Users\\namha\\Documents\\Panda\\app\\ThesisMB\\node_modules\\expo-image-picker\\src\\ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () => {\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}