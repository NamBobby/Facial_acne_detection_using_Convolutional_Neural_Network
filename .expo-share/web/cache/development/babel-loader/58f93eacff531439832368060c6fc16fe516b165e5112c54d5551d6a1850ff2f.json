{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Circle, Svg } from 'react-native-svg';\nimport { useNavigation } from '@react-navigation/native';\nimport { useRoute } from '@react-navigation/native';\nimport ResultStyle from \"./styles/ResultStyle.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Result = function Result() {\n  var _route$params;\n  var navigation = useNavigation();\n  var route = useRoute();\n  var imageUrl = (_route$params = route.params) == null ? void 0 : _route$params.imageUrl;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    result = _useState2[0],\n    setResult = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanning = _useState4[0],\n    setScanning = _useState4[1];\n  useEffect(function () {\n    var state = navigation.getState().routes[navigation.getState().index].params;\n    if (state) {\n      var _result = state.result;\n      setResult(_result);\n      setTimeout(function () {\n        setScanning(false);\n      }, 2000);\n    }\n  }, [navigation]);\n  var handleBackToShooting = function handleBackToShooting() {\n    navigation.goBack();\n  };\n  var getCircleChartPercentage = function getCircleChartPercentage() {\n    if (result === 'level_0') {\n      return 25;\n    } else if (result === 'level_1') {\n      return 50;\n    } else if (result === 'level_2') {\n      return 75;\n    } else if (result === 'level_3') {\n      return 100;\n    } else {\n      return 0;\n    }\n  };\n  return _jsxs(View, {\n    style: ResultStyle.container,\n    children: [_jsxs(View, {\n      style: ResultStyle.topinfo,\n      children: [_jsx(View, {\n        style: ResultStyle.row,\n        children: _jsx(View, {\n          style: ResultStyle.backmenu,\n          children: _jsx(TouchableOpacity, {\n            style: ResultStyle.rectangleA,\n            onPress: handleBackToShooting,\n            children: _jsx(Text, {\n              style: ResultStyle.backArrow,\n              children: \"\\u2B05\\uFE0F\"\n            })\n          })\n        })\n      }), _jsx(View, {\n        style: ResultStyle.mainphoto,\n        children: _jsx(View, {\n          style: ResultStyle.content,\n          children: _jsx(View, {\n            style: ResultStyle.elipse2,\n            children: _jsx(View, {\n              style: ResultStyle.elipse,\n              children: imageUrl ? _jsx(Image, {\n                source: {\n                  uri: imageUrl\n                },\n                style: ResultStyle.camera\n              }) : null\n            })\n          })\n        })\n      })]\n    }), _jsx(View, {\n      style: ResultStyle.bottominfo,\n      children: _jsx(View, {\n        style: ResultStyle.circleChart,\n        children: scanning ? _jsx(View, {\n          style: ResultStyle.circleChartPercentage,\n          children: _jsx(View, {\n            style: ResultStyle.contents,\n            children: _jsx(Text, {\n              style: ResultStyle.scanningText,\n              children: \"Scanning...\"\n            })\n          })\n        }) : _jsxs(View, {\n          style: ResultStyle.circleChartPercentage,\n          children: [_jsx(Svg, {\n            style: ResultStyle.circleChartBackground,\n            viewBox: \"0 0 50 50\",\n            children: _jsx(Circle, {\n              style: ResultStyle.circleChartCircle,\n              cx: 25,\n              cy: 25,\n              r: 24,\n              strokeWidth: 2,\n              strokeDasharray: getCircleChartPercentage() + \" \" + (100 - getCircleChartPercentage())\n            })\n          }), _jsx(View, {\n            style: ResultStyle.contents,\n            children: _jsx(Text, {\n              style: ResultStyle.resultText,\n              children: result\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default Result;","map":{"version":3,"names":["React","useEffect","useState","View","Text","TouchableOpacity","Image","Circle","Svg","useNavigation","useRoute","ResultStyle","jsx","_jsx","jsxs","_jsxs","Result","_route$params","navigation","route","imageUrl","params","_useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","scanning","setScanning","state","getState","routes","index","setTimeout","handleBackToShooting","goBack","getCircleChartPercentage","style","container","children","topinfo","row","backmenu","rectangleA","onPress","backArrow","mainphoto","content","elipse2","elipse","source","uri","camera","bottominfo","circleChart","circleChartPercentage","contents","scanningText","circleChartBackground","viewBox","circleChartCircle","cx","cy","r","strokeWidth","strokeDasharray","resultText"],"sources":["C:/Users/namha/Documents/Panda/app/ThesisMB/src/views/Result/Result.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\r\nimport { Circle, Svg } from 'react-native-svg';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\nimport ResultStyle from './styles/ResultStyle.js';\r\n\r\nconst Result = () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const imageUrl = route.params?.imageUrl;\r\n  const [result, setResult] = useState('');\r\n  const [scanning, setScanning] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const state = navigation.getState().routes[navigation.getState().index].params;\r\n    if (state) {\r\n      const { result } = state;\r\n      setResult(result);\r\n  \r\n      setTimeout(() => {\r\n        setScanning(false);\r\n      }, 2000);\r\n    }\r\n  }, [navigation]);\r\n\r\n  const handleBackToShooting = () => {\r\n    navigation.goBack();\r\n  };\r\n\r\n  const getCircleChartPercentage = () => {\r\n    if (result === 'level_0') {\r\n      return 25;\r\n    } else if (result === 'level_1') {\r\n      return 50;\r\n    } else if (result === 'level_2') {\r\n      return 75;\r\n    } else if (result === 'level_3') {\r\n      return 100;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={ResultStyle.container}>\r\n      <View style={ResultStyle.topinfo}>\r\n        <View style={ResultStyle.row}>\r\n          <View style={ResultStyle.backmenu}>\r\n            <TouchableOpacity style={ResultStyle.rectangleA} onPress={handleBackToShooting}>\r\n              <Text style={ResultStyle.backArrow}>⬅️</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View style={ResultStyle.mainphoto}>\r\n          <View style={ResultStyle.content}>\r\n            <View style={ResultStyle.elipse2}>\r\n              <View style={ResultStyle.elipse}>\r\n                {imageUrl ? (\r\n                  <Image source={{ uri: imageUrl }} style={ResultStyle.camera} />\r\n                ) : null}\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <View style={ResultStyle.bottominfo}>\r\n        <View style={ResultStyle.circleChart}>\r\n          {scanning ? (\r\n            <View style={ResultStyle.circleChartPercentage}>\r\n              <View style={ResultStyle.contents}>\r\n                <Text style={ResultStyle.scanningText}>Scanning...</Text>\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <View style={ResultStyle.circleChartPercentage}>\r\n              <Svg style={ResultStyle.circleChartBackground} viewBox=\"0 0 50 50\">\r\n                <Circle\r\n                  style={ResultStyle.circleChartCircle}\r\n                  cx={25}\r\n                  cy={25}\r\n                  r={24}\r\n                  strokeWidth={2}\r\n                  strokeDasharray={`${getCircleChartPercentage()} ${100 - getCircleChartPercentage()}`}\r\n                />\r\n              </Svg>\r\n              <View style={ResultStyle.contents}>\r\n                <Text style={ResultStyle.resultText}>{result}</Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}