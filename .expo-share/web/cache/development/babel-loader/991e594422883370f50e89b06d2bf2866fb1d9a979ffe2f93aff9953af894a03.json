{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConversionTables = void 0;\nexports.convertNativeProps = convertNativeProps;\nexports.ensureNativeProps = ensureNativeProps;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _ExponentCameraManager = _interopRequireDefault(require(\"../ExponentCameraManager\"));\nvar ConversionTables = {\n  type: _ExponentCameraManager.default.Type,\n  flashMode: _ExponentCameraManager.default.FlashMode,\n  autoFocus: _ExponentCameraManager.default.AutoFocus,\n  whiteBalance: _ExponentCameraManager.default.WhiteBalance\n};\nexports.ConversionTables = ConversionTables;\nfunction convertNativeProps(props) {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n  var nativeProps = {};\n  for (var _ref of Object.entries(props)) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n    var key = _ref2[0];\n    var value = _ref2[1];\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n  return nativeProps;\n}\nfunction ensureNativeProps(props) {\n  var newProps = convertNativeProps(props);\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n  if (_expoModulesCore.Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n  if (_expoModulesCore.Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n  return newProps;\n}","map":{"version":3,"names":["_expoModulesCore","require","_ExponentCameraManager","_interopRequireDefault","ConversionTables","type","CameraManager","Type","flashMode","FlashMode","autoFocus","AutoFocus","whiteBalance","WhiteBalance","exports","convertNativeProps","props","nativeProps","_ref","Object","entries","_ref2","_slicedToArray2","default","key","value","ensureNativeProps","newProps","onBarCodeScanned","barCodeScannerEnabled","onFacesDetected","faceDetectorEnabled","Platform","OS","ratio","useCamera2Api","poster"],"sources":["C:\\Users\\namha\\Documents\\Panda\\app\\ThesisMB\\node_modules\\expo-camera\\src\\utils\\props.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport {\n  CameraNativeProps,\n  CameraType,\n  FlashMode,\n  AutoFocus,\n  WhiteBalance,\n  CameraProps,\n} from '../Camera.types';\nimport CameraManager from '../ExponentCameraManager';\n\n// Values under keys from this object will be transformed to native options\nexport const ConversionTables: {\n  type: Record<keyof typeof CameraType, CameraNativeProps['type']>;\n  flashMode: Record<keyof typeof FlashMode, CameraNativeProps['flashMode']>;\n  autoFocus: Record<keyof typeof AutoFocus, CameraNativeProps['autoFocus']>;\n  whiteBalance: Record<keyof typeof WhiteBalance, CameraNativeProps['whiteBalance']>;\n} = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance,\n};\n\nexport function convertNativeProps(props?: CameraProps): CameraNativeProps {\n  if (!props || typeof props !== 'object') {\n    return {};\n  }\n\n  const nativeProps: CameraNativeProps = {};\n\n  for (const [key, value] of Object.entries(props)) {\n    if (typeof value === 'string' && ConversionTables[key]) {\n      nativeProps[key] = ConversionTables[key][value];\n    } else {\n      nativeProps[key] = value;\n    }\n  }\n\n  return nativeProps;\n}\n\nexport function ensureNativeProps(props?: CameraProps): CameraNativeProps {\n  const newProps = convertNativeProps(props);\n\n  if (newProps.onBarCodeScanned) {\n    newProps.barCodeScannerEnabled = true;\n  }\n\n  if (newProps.onFacesDetected) {\n    newProps.faceDetectorEnabled = true;\n  }\n\n  if (Platform.OS !== 'android') {\n    delete newProps.ratio;\n    delete newProps.useCamera2Api;\n  }\n\n  if (Platform.OS !== 'web') {\n    delete newProps.poster;\n  }\n\n  return newProps;\n}\n"],"mappings":";;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,OAAA;AAUA,IAAAC,sBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAGO,IAAMG,gBAAgB,GAKzB;EACFC,IAAI,EAAEC,8BAAa,CAACC,IAAI;EACxBC,SAAS,EAAEF,8BAAa,CAACG,SAAS;EAClCC,SAAS,EAAEJ,8BAAa,CAACK,SAAS;EAClCC,YAAY,EAAEN,8BAAa,CAACO;CAC7B;AAACC,OAAA,CAAAV,gBAAA,GAAAA,gBAAA;AAEI,SAAUW,kBAAkBA,CAACC,KAAmB;EACpD,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACvC,OAAO,EAAE;;EAGX,IAAMC,WAAW,GAAsB,EAAE;EAEzC,SAAAC,IAAA,IAA2BC,MAAM,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IAAA,IAAAK,KAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAL,IAAA;IAAA,IAAtCM,GAAG,GAAAH,KAAA;IAAA,IAAEI,KAAK,GAAAJ,KAAA;IACpB,IAAI,OAAOI,KAAK,KAAK,QAAQ,IAAIrB,gBAAgB,CAACoB,GAAG,CAAC,EAAE;MACtDP,WAAW,CAACO,GAAG,CAAC,GAAGpB,gBAAgB,CAACoB,GAAG,CAAC,CAACC,KAAK,CAAC;KAChD,MAAM;MACLR,WAAW,CAACO,GAAG,CAAC,GAAGC,KAAK;;;EAI5B,OAAOR,WAAW;AACpB;AAEM,SAAUS,iBAAiBA,CAACV,KAAmB;EACnD,IAAMW,QAAQ,GAAGZ,kBAAkB,CAACC,KAAK,CAAC;EAE1C,IAAIW,QAAQ,CAACC,gBAAgB,EAAE;IAC7BD,QAAQ,CAACE,qBAAqB,GAAG,IAAI;;EAGvC,IAAIF,QAAQ,CAACG,eAAe,EAAE;IAC5BH,QAAQ,CAACI,mBAAmB,GAAG,IAAI;;EAGrC,IAAIC,yBAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;IAC7B,OAAON,QAAQ,CAACO,KAAK;IACrB,OAAOP,QAAQ,CAACQ,aAAa;;EAG/B,IAAIH,yBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;IACzB,OAAON,QAAQ,CAACS,MAAM;;EAGxB,OAAOT,QAAQ;AACjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}